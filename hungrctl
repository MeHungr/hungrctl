#!/bin/bash

# ===== Source setup and logging utilities =====
source "$(dirname "$(realpath "$0")")/lib/paths.sh"
source "$ROOT_DIR/lib/log.sh"

# ===== Parse Mode =====
mode="${1:-check}"

case "$mode" in
    check|baseline)
        log_info "Running in $mode mode"
        ;;
    help|--help|-h)
        echo "Usage: $0 [check|baseline]"
        echo "  check     - run service and system checks (default)"
        echo "  baseline  - create or update baseline files"
        exit 0
        ;;
    *)
        log_fail "Unknown mode: $mode"
        echo "Run '$0 help' for usage."
        exit 1
        ;;
esac

# ===== Log Files =====
full_log="$LOG_DIR/service_check_full.log"
run_log="$LOG_DIR/service_check.log"

# Clear the single-run log
> "$run_log"

# ===== Log Header =====
{
    echo "==================== SERVICE UPTIME CHECK ===================="
    echo "Timestamp: $(timestamp)"
    echo "Hostname: $(hostname)"
    echo "Mode: $mode"
    echo "============================================================="
    echo
} >> "$run_log"

# ===== Function: run_check =====
run_check() {
    local script_path="$1"
    local label
    label="$(basename "$script_path" .sh)"
    local temp_log="/tmp/${label}_check.log"
    local filtered_log="/tmp/${label}_check.filtered.log"

    log_info "[RUNNING] $label" | tee -a "$run_log"

    # Run check and capture all output
    "$script_path" "$mode" | tee "$temp_log"
    cat "$temp_log" | tee -a "$run_log" >> "$full_log"

    log_info "[DONE] $label" | tee -a "$run_log"
    echo >> "$run_log"

    # ===== Filter for WARN and FAIL only =====
    grep --color=never -E '\[WARN\]|\[FAIL\]' "$temp_log" > "$filtered_log"

    # ===== Discord Output =====
    if [ "$DISCORD" = true ]; then
        local base="${label#check_}"
        local upper_base="${base^^}"
        local var_name="${upper_base}_WEBHOOK_URL"
        local webhook="${!var_name}"

        if [[ -n "$webhook" && -s "$filtered_log" ]]; then
            send_discord_alert "$(cat "$filtered_log")" \
                "${upper_base} alerts on $(hostname) at $(timestamp)" \
                "$webhook"
        else
            log_info "No warnings or failures for $label â€” nothing sent to Discord." | tee -a "$run_log"
        fi
    fi
}

# ===== Function: show_log_summary =====
show_log_summary() {
    (cat "$run_log"; echo -e "${green}Done! The full log can be viewed at: ${yellow}$full_log${reset}") | less -R
}

# ===== Run All Checks =====
run_check "$ROOT_DIR/service_checks/check_firewall.sh"
run_check "$ROOT_DIR/service_checks/check_services.sh"

# ===== Final Discord Summary =====
if [ "$DISCORD" = true ]; then
    send_discord_alert "$(cat "$run_log")" \
        "SERVICE UPTIME SUMMARY on $(hostname) at $(timestamp)" \
        "$LOGGING_WEBHOOK_URL"
fi

# ===== Show Output =====
show_log_summary

