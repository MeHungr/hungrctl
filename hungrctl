#!/bin/bash

# ===== Source unified environment setup =====
source "$(dirname "$(realpath "$0")")/lib/env.sh"

# ===== Ensure run as root =====
if [ "$EUID" -ne 0 ]; then
	log_fail "This tool must be run as root. Exiting..."
	exit 1
fi

# ===== Parse Mode =====
MODE="${1:-check}"

case "$MODE" in
    check|baseline)
        log_info "Running in $MODE mode"
        ;;
    help|--help|-h)
        echo "Usage: $0 [check|baseline]"
        echo "  check     - run service and system checks (default)"
        echo "  baseline  - create or update baseline files"
        exit 0
        ;;
    *)
        log_fail "Unknown mode: $MODE"
        echo "Run '$0 help' for usage."
        exit 1
        ;;
esac

# ===== Log Files =====
FULL_LOG="$LOG_DIR/service_check_full.log"
RUN_LOG="$LOG_DIR/service_check.log"

# Clear the single-run log
> "$RUN_LOG"

# ===== Log Header =====
{
    echo "==================== SERVICE UPTIME CHECK ===================="
    echo "Timestamp: $(timestamp)"
    echo "Hostname: $(hostname)"
    echo "Mode: $MODE"
    echo "============================================================="
    echo
} >> "$RUN_LOG"

# ===== Function: run_check =====
run_check() {
    local script_path="$1"
    local label
    label="$(basename "$script_path" .sh)"

    local temp_log
    local filtered_log

    temp_log="$(mktemp "$TMP_DIR/${label}_check.XXXXXX")"
    filtered_log="$(mktemp "$TMP_DIR/${label}_check_filtered.XXXXXX")"

    log_info "[RUNNING] $label" | tee -a "$RUN_LOG"

    # Run check and capture all output
    "$script_path" "$MODE" | tee "$temp_log"
    cat "$temp_log" | tee -a "$RUN_LOG" >> "$FULL_LOG"

    log_info "[DONE] $label" | tee -a "$RUN_LOG"

    # ===== Filter for WARN and FAIL only =====
    grep --color=never -E '\[WARN\]|\[FAIL\]|\[EVENT:.*\]' "$temp_log" > "$filtered_log"

    # ===== Discord Output =====
    if [ "$DISCORD" = true ]; then
        local base="${label#check_}"
        local upper_base="${base^^}"
        local var_name="${upper_base}_WEBHOOK_URL"
        local webhook="${!var_name}"

        if [[ -n "$webhook" && -s "$filtered_log" ]]; then
            send_discord_alert "$(cat "$filtered_log")" \
                "${upper_base} alerts on $(hostname) at $(timestamp)" \
                "$webhook"
        else
            log_info "No warnings or failures for $label â€” nothing sent to Discord." | tee -a "$RUN_LOG"
        fi
	echo >> "$RUN_LOG" # newline
    fi
}

# ===== Function: show_log_summary =====
show_log_summary() {
    (cat "$RUN_LOG"; echo -e "${green}Done! The full log can be viewed at: ${yellow}$FULL_LOG${reset}") | less -R
}

# ===== Run All Checks =====
run_check "$ROOT_DIR/service_checks/check_firewall.sh"
run_check "$ROOT_DIR/service_checks/check_services.sh"

# ===== Final Discord Summary =====
if [ "$DISCORD" = true ]; then
    send_discord_alert "$(cat "$RUN_LOG")" \
        "SERVICE UPTIME SUMMARY on $(hostname) at $(timestamp)" \
        "$LOGGING_WEBHOOK_URL"
fi

# ===== Show Output =====
show_log_summary

